{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inspectRegExp;\n\nvar _helpers = require(\"./helpers\");\n\nfunction inspectRegExp(value, options) {\n  const flags = value.toString().split('/')[2];\n  const sourceLength = options.truncate - (2 + flags.length);\n  const source = value.source;\n  return options.stylize(`/${(0, _helpers.truncate)(source, sourceLength)}/${flags}`, 'regexp');\n}","map":{"version":3,"names":["inspectRegExp","value","options","flags","toString","split","sourceLength","truncate","length","source","stylize"],"sources":["/Users/taha/Desktop/packet/frontend/node_modules/loupe/lib/regexp.js"],"sourcesContent":["import { truncate } from './helpers'\n\nexport default function inspectRegExp(value, options) {\n  const flags = value.toString().split('/')[2]\n  const sourceLength = options.truncate - (2 + flags.length)\n  const source = value.source\n  return options.stylize(`/${truncate(source, sourceLength)}/${flags}`, 'regexp')\n}\n"],"mappings":";;;;;;;AAAA;;AAEe,SAASA,aAAT,CAAuBC,KAAvB,EAA8BC,OAA9B,EAAuC;EACpD,MAAMC,KAAK,GAAGF,KAAK,CAACG,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAd;EACA,MAAMC,YAAY,GAAGJ,OAAO,CAACK,QAAR,IAAoB,IAAIJ,KAAK,CAACK,MAA9B,CAArB;EACA,MAAMC,MAAM,GAAGR,KAAK,CAACQ,MAArB;EACA,OAAOP,OAAO,CAACQ,OAAR,CAAiB,IAAG,IAAAH,iBAAA,EAASE,MAAT,EAAiBH,YAAjB,CAA+B,IAAGH,KAAM,EAA5D,EAA+D,QAA/D,CAAP;AACD"},"metadata":{},"sourceType":"script"}