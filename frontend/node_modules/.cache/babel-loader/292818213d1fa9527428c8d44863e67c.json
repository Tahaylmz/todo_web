{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.inspectList = inspectList;\nexports.inspectProperty = inspectProperty;\nexports.normaliseOptions = normaliseOptions;\nexports.truncate = truncate;\nexports.truncator = void 0;\nconst ansiColors = {\n  bold: ['1', '22'],\n  dim: ['2', '22'],\n  italic: ['3', '23'],\n  underline: ['4', '24'],\n  // 5 & 6 are blinking\n  inverse: ['7', '27'],\n  hidden: ['8', '28'],\n  strike: ['9', '29'],\n  // 10-20 are fonts\n  // 21-29 are resets for 1-9\n  black: ['30', '39'],\n  red: ['31', '39'],\n  green: ['32', '39'],\n  yellow: ['33', '39'],\n  blue: ['34', '39'],\n  magenta: ['35', '39'],\n  cyan: ['36', '39'],\n  white: ['37', '39'],\n  brightblack: ['30;1', '39'],\n  brightred: ['31;1', '39'],\n  brightgreen: ['32;1', '39'],\n  brightyellow: ['33;1', '39'],\n  brightblue: ['34;1', '39'],\n  brightmagenta: ['35;1', '39'],\n  brightcyan: ['36;1', '39'],\n  brightwhite: ['37;1', '39'],\n  grey: ['90', '39']\n};\nconst styles = {\n  special: 'cyan',\n  number: 'yellow',\n  bigint: 'yellow',\n  boolean: 'yellow',\n  undefined: 'grey',\n  null: 'bold',\n  string: 'green',\n  symbol: 'green',\n  date: 'magenta',\n  regexp: 'red'\n};\nconst truncator = '…';\nexports.truncator = truncator;\n\nfunction colorise(value, styleType) {\n  const color = ansiColors[styles[styleType]] || ansiColors[styleType];\n\n  if (!color) {\n    return String(value);\n  }\n\n  return `\\u001b[${color[0]}m${String(value)}\\u001b[${color[1]}m`;\n}\n\nfunction normaliseOptions({\n  showHidden = false,\n  depth = 2,\n  colors = false,\n  customInspect = true,\n  showProxy = false,\n  maxArrayLength = Infinity,\n  breakLength = Infinity,\n  seen = [],\n  // eslint-disable-next-line no-shadow\n  truncate = Infinity,\n  stylize = String\n} = {}) {\n  const options = {\n    showHidden: Boolean(showHidden),\n    depth: Number(depth),\n    colors: Boolean(colors),\n    customInspect: Boolean(customInspect),\n    showProxy: Boolean(showProxy),\n    maxArrayLength: Number(maxArrayLength),\n    breakLength: Number(breakLength),\n    truncate: Number(truncate),\n    seen,\n    stylize\n  };\n\n  if (options.colors) {\n    options.stylize = colorise;\n  }\n\n  return options;\n}\n\nfunction truncate(string, length, tail = truncator) {\n  string = String(string);\n  const tailLength = tail.length;\n  const stringLength = string.length;\n\n  if (tailLength > length && stringLength > tailLength) {\n    return tail;\n  }\n\n  if (stringLength > length && stringLength > tailLength) {\n    return `${string.slice(0, length - tailLength)}${tail}`;\n  }\n\n  return string;\n} // eslint-disable-next-line complexity\n\n\nfunction inspectList(list, options, inspectItem, separator = ', ') {\n  inspectItem = inspectItem || options.inspect;\n  const size = list.length;\n  if (size === 0) return '';\n  const originalLength = options.truncate;\n  let output = '';\n  let peek = '';\n  let truncated = '';\n\n  for (let i = 0; i < size; i += 1) {\n    const last = i + 1 === list.length;\n    const secondToLast = i + 2 === list.length;\n    truncated = `${truncator}(${list.length - i})`;\n    const value = list[i]; // If there is more than one remaining we need to account for a separator of `, `\n\n    options.truncate = originalLength - output.length - (last ? 0 : separator.length);\n    const string = peek || inspectItem(value, options) + (last ? '' : separator);\n    const nextLength = output.length + string.length;\n    const truncatedLength = nextLength + truncated.length; // If this is the last element, and adding it would\n    // take us over length, but adding the truncator wouldn't - then break now\n\n    if (last && nextLength > originalLength && output.length + truncated.length <= originalLength) {\n      break;\n    } // If this isn't the last or second to last element to scan,\n    // but the string is already over length then break here\n\n\n    if (!last && !secondToLast && truncatedLength > originalLength) {\n      break;\n    } // Peek at the next string to determine if we should\n    // break early before adding this item to the output\n\n\n    peek = last ? '' : inspectItem(list[i + 1], options) + (secondToLast ? '' : separator); // If we have one element left, but this element and\n    // the next takes over length, the break early\n\n    if (!last && secondToLast && truncatedLength > originalLength && nextLength + peek.length > originalLength) {\n      break;\n    }\n\n    output += string; // If the next element takes us to length -\n    // but there are more after that, then we should truncate now\n\n    if (!last && !secondToLast && nextLength + peek.length >= originalLength) {\n      truncated = `${truncator}(${list.length - i - 1})`;\n      break;\n    }\n\n    truncated = '';\n  }\n\n  return `${output}${truncated}`;\n}\n\nfunction quoteComplexKey(key) {\n  if (key.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)) {\n    return key;\n  }\n\n  return JSON.stringify(key).replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n}\n\nfunction inspectProperty([key, value], options) {\n  options.truncate -= 2;\n\n  if (typeof key === 'string') {\n    key = quoteComplexKey(key);\n  } else if (typeof key !== 'number') {\n    key = `[${options.inspect(key, options)}]`;\n  }\n\n  options.truncate -= key.length;\n  value = options.inspect(value, options);\n  return `${key}: ${value}`;\n}","map":{"version":3,"names":["ansiColors","bold","dim","italic","underline","inverse","hidden","strike","black","red","green","yellow","blue","magenta","cyan","white","brightblack","brightred","brightgreen","brightyellow","brightblue","brightmagenta","brightcyan","brightwhite","grey","styles","special","number","bigint","boolean","undefined","null","string","symbol","date","regexp","truncator","colorise","value","styleType","color","String","normaliseOptions","showHidden","depth","colors","customInspect","showProxy","maxArrayLength","Infinity","breakLength","seen","truncate","stylize","options","Boolean","Number","length","tail","tailLength","stringLength","slice","inspectList","list","inspectItem","separator","inspect","size","originalLength","output","peek","truncated","i","last","secondToLast","nextLength","truncatedLength","quoteComplexKey","key","match","JSON","stringify","replace","inspectProperty"],"sources":["/Users/taha/Desktop/packet/frontend/node_modules/loupe/lib/helpers.js"],"sourcesContent":["const ansiColors = {\n  bold: ['1', '22'],\n  dim: ['2', '22'],\n  italic: ['3', '23'],\n  underline: ['4', '24'],\n  // 5 & 6 are blinking\n  inverse: ['7', '27'],\n  hidden: ['8', '28'],\n  strike: ['9', '29'],\n  // 10-20 are fonts\n  // 21-29 are resets for 1-9\n  black: ['30', '39'],\n  red: ['31', '39'],\n  green: ['32', '39'],\n  yellow: ['33', '39'],\n  blue: ['34', '39'],\n  magenta: ['35', '39'],\n  cyan: ['36', '39'],\n  white: ['37', '39'],\n\n  brightblack: ['30;1', '39'],\n  brightred: ['31;1', '39'],\n  brightgreen: ['32;1', '39'],\n  brightyellow: ['33;1', '39'],\n  brightblue: ['34;1', '39'],\n  brightmagenta: ['35;1', '39'],\n  brightcyan: ['36;1', '39'],\n  brightwhite: ['37;1', '39'],\n\n  grey: ['90', '39'],\n}\n\nconst styles = {\n  special: 'cyan',\n  number: 'yellow',\n  bigint: 'yellow',\n  boolean: 'yellow',\n  undefined: 'grey',\n  null: 'bold',\n  string: 'green',\n  symbol: 'green',\n  date: 'magenta',\n  regexp: 'red',\n}\n\nexport const truncator = '…'\n\nfunction colorise(value, styleType) {\n  const color = ansiColors[styles[styleType]] || ansiColors[styleType]\n  if (!color) {\n    return String(value)\n  }\n  return `\\u001b[${color[0]}m${String(value)}\\u001b[${color[1]}m`\n}\n\nexport function normaliseOptions({\n  showHidden = false,\n  depth = 2,\n  colors = false,\n  customInspect = true,\n  showProxy = false,\n  maxArrayLength = Infinity,\n  breakLength = Infinity,\n  seen = [],\n  // eslint-disable-next-line no-shadow\n  truncate = Infinity,\n  stylize = String,\n} = {}) {\n  const options = {\n    showHidden: Boolean(showHidden),\n    depth: Number(depth),\n    colors: Boolean(colors),\n    customInspect: Boolean(customInspect),\n    showProxy: Boolean(showProxy),\n    maxArrayLength: Number(maxArrayLength),\n    breakLength: Number(breakLength),\n    truncate: Number(truncate),\n    seen,\n    stylize,\n  }\n  if (options.colors) {\n    options.stylize = colorise\n  }\n  return options\n}\n\nexport function truncate(string, length, tail = truncator) {\n  string = String(string)\n  const tailLength = tail.length\n  const stringLength = string.length\n  if (tailLength > length && stringLength > tailLength) {\n    return tail\n  }\n  if (stringLength > length && stringLength > tailLength) {\n    return `${string.slice(0, length - tailLength)}${tail}`\n  }\n  return string\n}\n\n// eslint-disable-next-line complexity\nexport function inspectList(list, options, inspectItem, separator = ', ') {\n  inspectItem = inspectItem || options.inspect\n  const size = list.length\n  if (size === 0) return ''\n  const originalLength = options.truncate\n  let output = ''\n  let peek = ''\n  let truncated = ''\n  for (let i = 0; i < size; i += 1) {\n    const last = i + 1 === list.length\n    const secondToLast = i + 2 === list.length\n    truncated = `${truncator}(${list.length - i})`\n    const value = list[i]\n\n    // If there is more than one remaining we need to account for a separator of `, `\n    options.truncate = originalLength - output.length - (last ? 0 : separator.length)\n    const string = peek || inspectItem(value, options) + (last ? '' : separator)\n    const nextLength = output.length + string.length\n    const truncatedLength = nextLength + truncated.length\n\n    // If this is the last element, and adding it would\n    // take us over length, but adding the truncator wouldn't - then break now\n    if (last && nextLength > originalLength && output.length + truncated.length <= originalLength) {\n      break\n    }\n\n    // If this isn't the last or second to last element to scan,\n    // but the string is already over length then break here\n    if (!last && !secondToLast && truncatedLength > originalLength) {\n      break\n    }\n\n    // Peek at the next string to determine if we should\n    // break early before adding this item to the output\n    peek = last ? '' : inspectItem(list[i + 1], options) + (secondToLast ? '' : separator)\n\n    // If we have one element left, but this element and\n    // the next takes over length, the break early\n    if (!last && secondToLast && truncatedLength > originalLength && nextLength + peek.length > originalLength) {\n      break\n    }\n\n    output += string\n\n    // If the next element takes us to length -\n    // but there are more after that, then we should truncate now\n    if (!last && !secondToLast && nextLength + peek.length >= originalLength) {\n      truncated = `${truncator}(${list.length - i - 1})`\n      break\n    }\n\n    truncated = ''\n  }\n  return `${output}${truncated}`\n}\n\nfunction quoteComplexKey(key) {\n  if (key.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)) {\n    return key\n  }\n  return JSON.stringify(key)\n    .replace(/'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\"')\n    .replace(/(^\"|\"$)/g, \"'\")\n}\n\nexport function inspectProperty([key, value], options) {\n  options.truncate -= 2\n  if (typeof key === 'string') {\n    key = quoteComplexKey(key)\n  } else if (typeof key !== 'number') {\n    key = `[${options.inspect(key, options)}]`\n  }\n  options.truncate -= key.length\n  value = options.inspect(value, options)\n  return `${key}: ${value}`\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}