{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Todo List\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Type Todo\",\n    value: $props.newTodo,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:newTodo', $event.target.value))\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_2), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.addTodo && _ctx.addTodo(...args))\n  }, \"Add\")]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todos, todo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: todo.id\n    }, _toDisplayString(todo.text), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;gCAEQA,oBAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,EAAa;AAAA;AAAb;;;;uBADJC,oBAWM,KAXN,EAWM,IAXN,EAWM,CAVFC,UAUE,EATFF,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFNA,oBAAmH,OAAnH,EAAmH;IAA5GG,IAAI,EAAC,MAAuG;IAAhGC,WAAW,EAAC,WAAoF;IAAvEC,KAAK,EAAEC,cAAgE;IAAtDC,OAAK,sCAAEC,WAAK,gBAAL,EAAwBC,MAAM,CAACC,MAAP,CAAcL,KAAtC,CAAF;EAAiD,CAAnH;;EAAA,aAEM,EADNL,oBAAqC,QAArC,EAAqC;IAA5BW,OAAK,yCAAEH,qCAAF;EAAuB,CAArC,EAAyB,KAAzB,CACM,CAHN,CASE,EALFR,oBAIK,IAJL,EAIK,IAJL,EAIK,oBAHLC,oBAEKW,SAFL,EAEK,IAFL,EAEKC,YAFcL,UAEd,EAFMM,IAAa,IAAT;yBAAfb,oBAEK,IAFL,EAEK;MAFsBc,GAAG,EAAED,IAAI,CAACE;IAEhC,CAFL,mBACOF,IAAI,CAACG,KADZ,EACgB;IAAA;IADhB;GAEK,CAFL;;EAAA,CAGK,EAJL,CAKE,CAXN","names":["_createElementVNode","_createElementBlock","_hoisted_1","type","placeholder","value","$props","onInput","_ctx","$event","target","onClick","_Fragment","_renderList","todo","key","id","text"],"sourceRoot":"","sources":["/Users/taha/Desktop/packet/frontend/src/components/Todo/Todo.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>Todo List</h1>\n        <div>\n        <input type=\"text\" placeholder=\"Type Todo\" :value=\"newTodo\" @input=\"$emit('update:newTodo', $event.target.value)\"/>\n        <button @click=\"addTodo\">Add</button>\n        </div>\n        <ul>\n        <li v-for=\"todo in todos\" :key=\"todo.id\">\n            {{ todo.text }}\n        </li>\n        </ul>\n    </div>\n</template>\n\n<script setup>\nimport { defineProps, defineEmits } from 'vue'\ndefineProps({\n    newTodo: String,\n  })\n  defineEmits(['update:newTodo'])</script>"]},"metadata":{},"sourceType":"module"}