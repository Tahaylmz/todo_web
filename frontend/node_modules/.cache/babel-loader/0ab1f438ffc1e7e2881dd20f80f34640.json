{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  id: \"todo-list\"\n};\nconst _hoisted_5 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($props.title), 1\n  /* TEXT */\n  ), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"todo-textbox\",\n    cols: \"30\",\n    rows: \"10\",\n    placeholder: \"Enter Todo\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.postData.todo = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.postData.todo]]), _hoisted_2, _createElementVNode(\"button\", {\n    id: \"todo-add\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.handleSend && $options.handleSend(...args))\n  }, \"Add\"), _hoisted_3, _createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, (todo, i) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: i,\n      id: `list-item-${i}`\n    }, _toDisplayString(todo.todo), 9\n    /* TEXT, PROPS */\n    , _hoisted_5);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;EA0CaA,KAAK,EAAC;;;gCASPC,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;gCAEAA,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;;EACIC,EAAE,EAAC;;;;uBAZXC,oBAiBM,KAjBN,cAiBM,CAhBFF,oBAAoB,IAApB,EAAoB,IAApB,EAAoBG,iBAAbC,YAAa,CAApB,EAAY;EAAA;EAAZ,CAgBE,kBAfFJ,oBAMY,UANZ,EAMY;IALRC,EAAE,EAAC,cAKK;IAJRI,IAAI,EAAC,IAIG;IAHRC,IAAI,EAAC,IAGG;IAFRC,WAAW,EAAC,YAEJ;+DADCC,eAASC,OAAIC;EACd,CANZ;;EAAA,kBAKaF,eAASC,OAUpB,EARFE,UAQE,EAPFX,oBAAsD,QAAtD,EAAsD;IAA9CC,EAAE,EAAC,UAA2C;IAA/BW,OAAK,yCAAEC,mDAAF;EAA0B,CAAtD,EAA0C,KAA1C,CAOE,EANFC,UAME,EALFd,oBAIK,IAJL,cAIK,oBAHDE,oBAEKa,SAFL,EAEK,IAFL,EAEKC,YAFmBR,WAEnB,EAFwB,CAAjBC,IAAiB,EAAXQ,CAAW,KAAV;yBAAnBf,oBAEK,IAFL,EAEK;MAF2BgB,GAAG,EAAED,CAEhC;MAFoChB,EAAE,eAAegB,CAAC;IAEtD,CAFL,mBACOR,IAAI,CAACA,KADZ,EACgB;IAAA;IADhB,EACgBU,UADhB;GAEK,CAFL;;EAAA,CAGC,EAJL,CAKE,CAjBN","names":["class","_createElementVNode","id","_createElementBlock","_toDisplayString","$props","cols","rows","placeholder","$data","todo","$event","_hoisted_2","onClick","$options","_hoisted_3","_Fragment","_renderList","i","key","_hoisted_5"],"sourceRoot":"","sources":["/Users/taha/Desktop/packet/frontend/src/components/Todo/Todo.vue"],"sourcesContent":["<!-- <script setup>\n    import { defineProps, defineEmits } from \"vue\";\n    defineProps({\n        newTodo: String,\n        todos: Array,\n        addTodo: Function\n    });\n    const emit = defineEmits([\"update:newTodo\", \"update:todos\"]);\n    </script>\n  \n  <style>\n.container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n  </style>\n\n    <template>\n  \n    <div class='container'>\n        <h1>Todo List</h1>\n        <div>\n        <input\n          type=\"text\"\n          placeholder=\"Type to add new todo\"\n          :value=\"newTodo\"\n          @input=\"$emit('update:newTodo', $event.target.value)\"/>\n        <button @click=\"addTodo\">Add</button>\n        </div>\n        <div>\n            <ul>\n                <li v-for=\"todo in todos\" :key=\"todo.id\">\n                    {{ todo.text }}\n                </li>\n            </ul>\n        </div>\n    </div>\n    </template> -->\n\n    <template>\n        <div class=\"todo\">\n            <h1>{{ title }}</h1>\n            <textarea\n                id=\"todo-textbox\"\n                cols=\"30\"\n                rows=\"10\"\n                placeholder=\"Enter Todo\"\n                v-model=\"postData.todo\"\n            ></textarea>\n            <br />\n            <button id=\"todo-add\" @click=\"handleSend\">Add</button>\n            <br />\n            <ul id=\"todo-list\">\n                <li v-for=\"(todo, i) in todos\" :key=\"i\" :id=\"`list-item-${i}`\">\n                    {{ todo.todo }}\n                </li>\n            </ul>\n        </div>\n    </template>\n    \n    <script>\n    import { getTodos, postTodos } from '../api';\n    \n    let apiUrl;\n\n    \n    export default {\n        name: 'Todo',\n        props: {\n            title: String,\n        },\n        data() {\n            return {\n                postData: {\n                    todo: '',\n                },\n                todos: {},\n            };\n        },\n    \n        async created() {\n            const { data } = await getTodos(apiUrl);\n            this.todos = data.todos;\n        },\n    \n        methods: {\n            async handleSend() {\n                await postTodos(apiUrl, this.postData);\n                const { data } = await getTodos(apiUrl);\n                console.log(data);\n                this.todos = data.todos;\n            },\n        },\n    };\n    </script>"]},"metadata":{},"sourceType":"module"}