{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Type to add new todo\",\n    value: $props.newTodo,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:newTodo', $event.target.value))\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_2), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $props.addTodo && $props.addTodo(...args))\n  }, \"Add\"), _createElementVNode(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.todos, todo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: todo.id\n    }, _toDisplayString(todo.text), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":";;EAqBSA,KAAK,EAAC;;;;uBAAXC,oBAcM,KAdN,cAcM,CAbFC,oBAIyD,OAJzD,EAIyD;IAHvDC,IAAI,EAAC,MAGkD;IAFvDC,WAAW,EAAC,sBAE2C;IADtDC,KAAK,EAAEC,cAC+C;IAAtDC,OAAK,sCAAEC,WAAK,gBAAL,EAAwBC,MAAM,CAACC,MAAP,CAAcL,KAAtC,CAAF;EAAiD,CAJzD;;EAAA,aAaE,EARFH,oBAAqC,QAArC,EAAqC;IAA5BS,OAAK,yCAAEL,yCAAF;EAAuB,CAArC,EAAyB,KAAzB,CAQE,EAPFJ,oBAMM,KANN,EAMM,IANN,EAMM,CALFA,oBAIK,IAJL,EAIK,IAJL,EAIK,oBAHDD,oBAEKW,SAFL,EAEK,IAFL,EAEKC,YAFcP,YAEd,EAFMQ,IAAa,IAAT;yBAAfb,oBAEK,IAFL,EAEK;MAFsBc,GAAG,EAAED,IAAI,CAACE;IAEhC,CAFL,mBACOF,IAAI,CAACG,KADZ,EACgB;IAAA;IADhB;GAEK,CAFL;;EAAA,CAGC,EAJL,CAKE,CANN,CAOE,CAdN","names":["class","_createElementBlock","_createElementVNode","type","placeholder","value","$props","onInput","_ctx","$event","target","onClick","_Fragment","_renderList","todo","key","id","text"],"sourceRoot":"","sources":["/Users/taha/Desktop/packet/frontend/src/components/Todo/Todo.vue"],"sourcesContent":["<script setup>\n    import { defineProps, defineEmits } from \"vue\";\n    defineProps({\n        newTodo: String,\n        todos: Array,\n        addTodo: Function\n    });\n    const emit = defineEmits([\"update:newTodo\", \"update:todos\"]);\n    </script>\n  \n  <style>\n.container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n  </style>\n\n    <template>\n  \n    <div class='container'>\n        <input\n          type=\"text\"\n          placeholder=\"Type to add new todo\"\n          :value=\"newTodo\"\n          @input=\"$emit('update:newTodo', $event.target.value)\"/>\n        <button @click=\"addTodo\">Add</button>\n        <div>\n            <ul>\n                <li v-for=\"todo in todos\" :key=\"todo.id\">\n                    {{ todo.text }}\n                </li>\n            </ul>\n        </div>\n    </div>\n    </template>"]},"metadata":{},"sourceType":"module"}