{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Todo List\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Type to add new todo\",\n    value: $props.modelValue,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:modelValue', $event.target.value))\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_2), _createElementVNode(\"button\", {\n    onClick: $setup.addTodo\n  }, \"Add\"), _createElementVNode(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.todos, todo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: todo.id\n    }, _toDisplayString(todo.text), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAaIA,oBAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,EAAa;AAAA;AAAb;;;;6DAAAC,YACAD,oBAcM,KAdN,EAcM,IAdN,EAcM,CAbFA,oBAI4D,OAJ5D,EAI4D;IAH1DE,IAAI,EAAC,MAGqD;IAF1DC,WAAW,EAAC,sBAE8C;IADzDC,KAAK,EAAEC,iBACkD;IAAzDC,OAAK,sCAAEC,WAAK,mBAAL,EAA2BC,MAAM,CAACC,MAAP,CAAcL,KAAzC,CAAF;EAAoD,CAJ5D;;EAAA,aAaE,EARFJ,oBAAqC,QAArC,EAAqC;IAA5BU,OAAK,EAAEC;EAAqB,CAArC,EAAyB,KAAzB,CAQE,EAPFX,oBAMM,KANN,EAMM,IANN,EAMM,CALFA,oBAIK,IAJL,EAIK,IAJL,EAIK,oBAHDY,oBAEKC,SAFL,EAEK,IAFL,EAEKC,YAFcT,YAEd,EAFMU,IAAa,IAAT;yBAAfH,oBAEK,IAFL,EAEK;MAFsBI,GAAG,EAAED,IAAI,CAACE;IAEhC,CAFL,mBACOF,IAAI,CAACG,KADZ,EACgB;IAAA;IADhB;GAEK,CAFL;;EAAA,CAGC,EAJL,CAKE,CANN,CAOE,CAdN","names":["_createElementVNode","_hoisted_1","type","placeholder","value","$props","onInput","_ctx","$event","target","onClick","$setup","_createElementBlock","_Fragment","_renderList","todo","key","id","text"],"sourceRoot":"","sources":["/Users/taha/Desktop/packet/frontend/src/components/Todo/Todo.vue"],"sourcesContent":["<script setup>\n    import { defineProps, defineEmits } from \"vue\";\n    defineProps({\n        modelValue: String,\n        todos: Array\n    });\n    const emit = defineEmits([\"update:modelValue\", \"update:todos\"]);\n    const addTodo = () => {\n        emit(\"update:todos\", [...todos.value, { id: todos.value.length + 1, text: \"New Todo\" }]);\n    };\n    </script>\n  \n    <template>\n    <h1>Todo List</h1>\n    <div>\n        <input\n          type=\"text\"\n          placeholder=\"Type to add new todo\"\n          :value=\"modelValue\"\n          @input=\"$emit('update:modelValue', $event.target.value)\"/>\n        <button @click=\"addTodo\">Add</button>\n        <div>\n            <ul>\n                <li v-for=\"todo in todos\" :key=\"todo.id\">\n                    {{ todo.text }}\n                </li>\n            </ul>\n        </div>\n    </div>\n\n    </template>"]},"metadata":{},"sourceType":"module"}