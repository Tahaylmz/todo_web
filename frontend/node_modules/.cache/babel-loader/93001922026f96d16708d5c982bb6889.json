{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inspectBigInt;\n\nvar _helpers = require(\"./helpers\");\n\nfunction inspectBigInt(number, options) {\n  let nums = (0, _helpers.truncate)(number.toString(), options.truncate - 1);\n  if (nums !== _helpers.truncator) nums += 'n';\n  return options.stylize(nums, 'bigint');\n}","map":{"version":3,"names":["inspectBigInt","number","options","nums","truncate","toString","truncator","stylize"],"sources":["/Users/taha/Desktop/packet/frontend/node_modules/loupe/lib/bigint.js"],"sourcesContent":["import { truncate, truncator } from './helpers'\n\nexport default function inspectBigInt(number, options) {\n  let nums = truncate(number.toString(), options.truncate - 1)\n  if (nums !== truncator) nums += 'n'\n  return options.stylize(nums, 'bigint')\n}\n"],"mappings":";;;;;;;AAAA;;AAEe,SAASA,aAAT,CAAuBC,MAAvB,EAA+BC,OAA/B,EAAwC;EACrD,IAAIC,IAAI,GAAG,IAAAC,iBAAA,EAASH,MAAM,CAACI,QAAP,EAAT,EAA4BH,OAAO,CAACE,QAAR,GAAmB,CAA/C,CAAX;EACA,IAAID,IAAI,KAAKG,kBAAb,EAAwBH,IAAI,IAAI,GAAR;EACxB,OAAOD,OAAO,CAACK,OAAR,CAAgBJ,IAAhB,EAAsB,QAAtB,CAAP;AACD"},"metadata":{},"sourceType":"script"}