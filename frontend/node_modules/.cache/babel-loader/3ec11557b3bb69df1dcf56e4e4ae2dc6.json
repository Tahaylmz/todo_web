{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inspectSet;\n\nrequire(\"core-js/modules/es.array.push.js\");\n\nvar _helpers = require(\"./helpers\");\n\n// IE11 doesn't support `Array.from(set)`\nfunction arrayFromSet(set) {\n  const values = [];\n  set.forEach(value => {\n    values.push(value);\n  });\n  return values;\n}\n\nfunction inspectSet(set, options) {\n  if (set.size === 0) return 'Set{}';\n  options.truncate -= 7;\n  return `Set{ ${(0, _helpers.inspectList)(arrayFromSet(set), options)} }`;\n}","map":{"version":3,"names":["arrayFromSet","set","values","forEach","value","push","inspectSet","options","size","truncate","inspectList"],"sources":["/Users/taha/Desktop/packet/frontend/node_modules/loupe/lib/set.js"],"sourcesContent":["import { inspectList } from './helpers'\n\n// IE11 doesn't support `Array.from(set)`\nfunction arrayFromSet(set) {\n  const values = []\n  set.forEach(value => {\n    values.push(value)\n  })\n  return values\n}\n\nexport default function inspectSet(set, options) {\n  if (set.size === 0) return 'Set{}'\n  options.truncate -= 7\n  return `Set{ ${inspectList(arrayFromSet(set), options)} }`\n}\n"],"mappings":";;;;;;;;;AAAA;;AAEA;AACA,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;EACzB,MAAMC,MAAM,GAAG,EAAf;EACAD,GAAG,CAACE,OAAJ,CAAYC,KAAK,IAAI;IACnBF,MAAM,CAACG,IAAP,CAAYD,KAAZ;EACD,CAFD;EAGA,OAAOF,MAAP;AACD;;AAEc,SAASI,UAAT,CAAoBL,GAApB,EAAyBM,OAAzB,EAAkC;EAC/C,IAAIN,GAAG,CAACO,IAAJ,KAAa,CAAjB,EAAoB,OAAO,OAAP;EACpBD,OAAO,CAACE,QAAR,IAAoB,CAApB;EACA,OAAQ,QAAO,IAAAC,oBAAA,EAAYV,YAAY,CAACC,GAAD,CAAxB,EAA+BM,OAA/B,CAAwC,IAAvD;AACD"},"metadata":{},"sourceType":"script"}