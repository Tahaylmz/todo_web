{"ast":null,"code":"import { getTodos, postTodos } from '../api';\nlet apiUrl;\nif (window.location.href === 'http://34.118.32.103/' || 'http://localhost:8080/') apiUrl = 'http://34.118.125.43';else apiUrl = 'http://34.116.219.66';\nexport default {\n  name: 'Todo',\n  props: {\n    title: String\n  },\n\n  data() {\n    return {\n      postData: {\n        todo: ''\n      },\n      todos: {}\n    };\n  },\n\n  async created() {\n    const {\n      data\n    } = await getTodos(apiUrl);\n    this.todos = data.todos;\n  },\n\n  methods: {\n    async handleSend() {\n      await postTodos(apiUrl, this.postData);\n      const {\n        data\n      } = await getTodos(apiUrl);\n      console.log(data);\n      this.todos = data.todos;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA+DI,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,QAApC;AAEA,IAAIC,MAAJ;AAEA,IACIC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,KAAyB,uBAAzB,IACA,wBAFJ,EAIIH,MAAK,GAAI,sBAAT,CAJJ,KAKKA,MAAK,GAAI,sBAAT;AAEL,eAAe;EACXI,IAAI,EAAE,MADK;EAEXC,KAAK,EAAE;IACHC,KAAK,EAAEC;EADJ,CAFI;;EAKXC,IAAI,GAAG;IACH,OAAO;MACHC,QAAQ,EAAE;QACNC,IAAI,EAAE;MADA,CADP;MAIHC,KAAK,EAAE;IAJJ,CAAP;EAMH,CAZU;;EAcX,MAAMC,OAAN,GAAgB;IACZ,MAAM;MAAEJ;IAAF,IAAW,MAAMV,QAAQ,CAACE,MAAD,CAA/B;IACA,KAAKW,KAAL,GAAaH,IAAI,CAACG,KAAlB;EACH,CAjBU;;EAmBXE,OAAO,EAAE;IACL,MAAMC,UAAN,GAAmB;MACf,MAAMf,SAAS,CAACC,MAAD,EAAS,KAAKS,QAAd,CAAf;MACA,MAAM;QAAED;MAAF,IAAW,MAAMV,QAAQ,CAACE,MAAD,CAA/B;MACAe,OAAO,CAACC,GAAR,CAAYR,IAAZ;MACA,KAAKG,KAAL,GAAaH,IAAI,CAACG,KAAlB;IACH;;EANI;AAnBE,CAAf","names":["getTodos","postTodos","apiUrl","window","location","href","name","props","title","String","data","postData","todo","todos","created","methods","handleSend","console","log"],"sourceRoot":"","sources":["/Users/taha/Desktop/packet/frontend/src/components/Todo/Todo.vue"],"sourcesContent":["<!-- <script setup>\n    import { defineProps, defineEmits } from \"vue\";\n    defineProps({\n        newTodo: String,\n        todos: Array,\n        addTodo: Function\n    });\n    const emit = defineEmits([\"update:newTodo\", \"update:todos\"]);\n    </script>\n  \n  <style>\n.container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n  </style>\n\n    <template>\n  \n    <div class='container'>\n        <h1>Todo List</h1>\n        <div>\n        <input\n          type=\"text\"\n          placeholder=\"Type to add new todo\"\n          :value=\"newTodo\"\n          @input=\"$emit('update:newTodo', $event.target.value)\"/>\n        <button @click=\"addTodo\">Add</button>\n        </div>\n        <div>\n            <ul>\n                <li v-for=\"todo in todos\" :key=\"todo.id\">\n                    {{ todo.text }}\n                </li>\n            </ul>\n        </div>\n    </div>\n    </template> -->\n\n    <template>\n        <div class=\"todo\">\n            <h1>{{ title }}</h1>\n            <textarea\n                id=\"todo-textbox\"\n                cols=\"30\"\n                rows=\"10\"\n                placeholder=\"Enter Todo\"\n                v-model=\"postData.todo\"\n            ></textarea>\n            <br />\n            <button id=\"todo-add\" @click=\"handleSend\">Add</button>\n            <br />\n            <ul id=\"todo-list\">\n                <li v-for=\"(todo, i) in todos\" :key=\"i\" :id=\"`list-item-${i}`\">\n                    {{ todo.todo }}\n                </li>\n            </ul>\n        </div>\n    </template>\n    \n    <script>\n    import { getTodos, postTodos } from '../api';\n    \n    let apiUrl;\n    \n    if (\n        window.location.href === 'http://34.118.32.103/' ||\n        'http://localhost:8080/'\n    )\n        apiUrl = 'http://34.118.125.43';\n    else apiUrl = 'http://34.116.219.66';\n    \n    export default {\n        name: 'Todo',\n        props: {\n            title: String,\n        },\n        data() {\n            return {\n                postData: {\n                    todo: '',\n                },\n                todos: {},\n            };\n        },\n    \n        async created() {\n            const { data } = await getTodos(apiUrl);\n            this.todos = data.todos;\n        },\n    \n        methods: {\n            async handleSend() {\n                await postTodos(apiUrl, this.postData);\n                const { data } = await getTodos(apiUrl);\n                console.log(data);\n                this.todos = data.todos;\n            },\n        },\n    };\n    </script>"]},"metadata":{},"sourceType":"module"}