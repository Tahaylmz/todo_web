{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = inspectObject;\n\nrequire(\"core-js/modules/es.array.push.js\");\n\nvar _helpers = require(\"./helpers\");\n\nfunction inspectObject(object, options) {\n  const properties = Object.getOwnPropertyNames(object);\n  const symbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(object) : [];\n\n  if (properties.length === 0 && symbols.length === 0) {\n    return '{}';\n  }\n\n  options.truncate -= 4;\n  options.seen = options.seen || [];\n\n  if (options.seen.indexOf(object) >= 0) {\n    return '[Circular]';\n  }\n\n  options.seen.push(object);\n  const propertyContents = (0, _helpers.inspectList)(properties.map(key => [key, object[key]]), options, _helpers.inspectProperty);\n  const symbolContents = (0, _helpers.inspectList)(symbols.map(key => [key, object[key]]), options, _helpers.inspectProperty);\n  options.seen.pop();\n  let sep = '';\n\n  if (propertyContents && symbolContents) {\n    sep = ', ';\n  }\n\n  return `{ ${propertyContents}${sep}${symbolContents} }`;\n}","map":{"version":3,"names":["inspectObject","object","options","properties","Object","getOwnPropertyNames","symbols","getOwnPropertySymbols","length","truncate","seen","indexOf","push","propertyContents","inspectList","map","key","inspectProperty","symbolContents","pop","sep"],"sources":["/Users/taha/Desktop/packet/frontend/node_modules/loupe/lib/object.js"],"sourcesContent":["import { inspectProperty, inspectList } from './helpers'\n\nexport default function inspectObject(object, options) {\n  const properties = Object.getOwnPropertyNames(object)\n  const symbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(object) : []\n  if (properties.length === 0 && symbols.length === 0) {\n    return '{}'\n  }\n  options.truncate -= 4\n  options.seen = options.seen || []\n  if (options.seen.indexOf(object) >= 0) {\n    return '[Circular]'\n  }\n  options.seen.push(object)\n  const propertyContents = inspectList(\n    properties.map(key => [key, object[key]]),\n    options,\n    inspectProperty\n  )\n  const symbolContents = inspectList(\n    symbols.map(key => [key, object[key]]),\n    options,\n    inspectProperty\n  )\n  options.seen.pop()\n  let sep = ''\n  if (propertyContents && symbolContents) {\n    sep = ', '\n  }\n  return `{ ${propertyContents}${sep}${symbolContents} }`\n}\n"],"mappings":";;;;;;;;;AAAA;;AAEe,SAASA,aAAT,CAAuBC,MAAvB,EAA+BC,OAA/B,EAAwC;EACrD,MAAMC,UAAU,GAAGC,MAAM,CAACC,mBAAP,CAA2BJ,MAA3B,CAAnB;EACA,MAAMK,OAAO,GAAGF,MAAM,CAACG,qBAAP,GAA+BH,MAAM,CAACG,qBAAP,CAA6BN,MAA7B,CAA/B,GAAsE,EAAtF;;EACA,IAAIE,UAAU,CAACK,MAAX,KAAsB,CAAtB,IAA2BF,OAAO,CAACE,MAAR,KAAmB,CAAlD,EAAqD;IACnD,OAAO,IAAP;EACD;;EACDN,OAAO,CAACO,QAAR,IAAoB,CAApB;EACAP,OAAO,CAACQ,IAAR,GAAeR,OAAO,CAACQ,IAAR,IAAgB,EAA/B;;EACA,IAAIR,OAAO,CAACQ,IAAR,CAAaC,OAAb,CAAqBV,MAArB,KAAgC,CAApC,EAAuC;IACrC,OAAO,YAAP;EACD;;EACDC,OAAO,CAACQ,IAAR,CAAaE,IAAb,CAAkBX,MAAlB;EACA,MAAMY,gBAAgB,GAAG,IAAAC,oBAAA,EACvBX,UAAU,CAACY,GAAX,CAAeC,GAAG,IAAI,CAACA,GAAD,EAAMf,MAAM,CAACe,GAAD,CAAZ,CAAtB,CADuB,EAEvBd,OAFuB,EAGvBe,wBAHuB,CAAzB;EAKA,MAAMC,cAAc,GAAG,IAAAJ,oBAAA,EACrBR,OAAO,CAACS,GAAR,CAAYC,GAAG,IAAI,CAACA,GAAD,EAAMf,MAAM,CAACe,GAAD,CAAZ,CAAnB,CADqB,EAErBd,OAFqB,EAGrBe,wBAHqB,CAAvB;EAKAf,OAAO,CAACQ,IAAR,CAAaS,GAAb;EACA,IAAIC,GAAG,GAAG,EAAV;;EACA,IAAIP,gBAAgB,IAAIK,cAAxB,EAAwC;IACtCE,GAAG,GAAG,IAAN;EACD;;EACD,OAAQ,KAAIP,gBAAiB,GAAEO,GAAI,GAAEF,cAAe,IAApD;AACD"},"metadata":{},"sourceType":"script"}